<?php

namespace Tests;

use PHPUnit\Framework\TestCase;
use App\Services\CommissionCalculator;


class CommissionCalculatorTest extends TestCase
{
    public function testCommissionCalculation(): void
    {
        // Get the CSV file path from the environment or PHP runtime arguments
        $csvFilePath = getenv('CSV_FILE');

        if (!$csvFilePath || !file_exists($csvFilePath)) {
            $this->markTestSkipped('CSV file not provided or does not exist. Pass the CSV file path as an environment variable "CSV_FILE".');
        }

        // Arrange
        $calculator = new CommissionCalculator();

        // Act
        $output = $this->captureOutput(function () use ($calculator, $csvFilePath) {
            $calculator->processCSV($csvFilePath);
        });

        // Assert the output (adjust the expected output, if needed)
        $expectedOutput = <<<OUTPUT
0.60
3.00
0.00
0.06
1.50
0
0.70
0.30
0.30
3.00
0.00
0.00
8612
OUTPUT;

    // Debugging: Print the differences before asserting
    if (trim($expectedOutput) !== trim($output)) {
        echo "\n==== EXPECTED OUTPUT ====\n";
        echo $expectedOutput;
        echo "\n==== ACTUAL OUTPUT ====\n";
        echo $output;
    }
    
    // Perform assertion
    $this->assertSame(trim($expectedOutput), trim($output), 'The calculated commission output does not match the expected result.');

    }

    /**
     * Utility function to capture output generated by callable code.
     *
     * @param callable $function The callable function to execute.
     * @return string The captured output.
     */
    private function captureOutput(callable $function): string
    {
        ob_start();
        $function();
        return ob_get_clean();
    }
}